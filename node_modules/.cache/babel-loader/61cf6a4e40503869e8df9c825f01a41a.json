{"ast":null,"code":"var _jsxFileName = \"/Users/roslynmelookaran/Documents/Code/04_Adas/06_Unit3/react/forms/locationiq/locationiq/src/components/NewLocationForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewLocationForm = props => {\n  _s();\n\n  const [formFields, setFormFields] = useState({\n    name: ''\n  });\n\n  const getCoordinates = name => {\n    axios.get('https://us1.locationiq.com/v1/search.php', {\n      params: {\n        key: 'pk.a4ee20e6824496da2fb04ab94b9da2dc',\n        // discussed below\n        q: name,\n        format: 'json'\n      }\n    }).then(response => {\n      const lat = response.data[0].lat;\n      const lon = response.data[0].lon;\n      console.log('success!', lat);\n      return {\n        lat: lat,\n        lon: lon\n      };\n    }).catch(error => {\n      console.log('error!', error.response.data);\n    });\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const coord = getCoordinates(formFields.name);\n    console.log(coord[0]);\n    console.log(coord[1]); // props.addStudentCallback({\n    //     nameData: formFields.name,\n    //     emailData: formFields.email\n    // });\n    // setFormFields({\n    //     name: '',\n    //     email: '',\n    // });\n\n    const newLocation = {\n      name: formFields.name,\n      lat: coord[0],\n      lon: coord[1]\n    };\n    props.onUpdateLocation(newLocation);\n  };\n\n  const onLocationChange = event => {\n    setFormFields({ ...formFields,\n      name: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"city\",\n        value: formFields.name,\n        onChange: onLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewLocationForm, \"MwCY6jYHUUAKMdvLcJv7yXHNbho=\");\n\n_c = NewLocationForm;\nNewLocationForm.propTypes = {\n  onUpdateLocation: PropTypes.func.isRequired\n};\nexport default NewLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLocationForm\");","map":{"version":3,"sources":["/Users/roslynmelookaran/Documents/Code/04_Adas/06_Unit3/react/forms/locationiq/locationiq/src/components/NewLocationForm.js"],"names":["React","PropTypes","useState","axios","NewLocationForm","props","formFields","setFormFields","name","getCoordinates","get","params","key","q","format","then","response","lat","data","lon","console","log","catch","error","onFormSubmit","event","preventDefault","coord","newLocation","onUpdateLocation","onLocationChange","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst NewLocationForm = (props) => {\n    \n    const [formFields, setFormFields] = useState({\n            name:'',\n            }\n        )\n    \n    const getCoordinates = (name) => {\n        axios.get('https://us1.locationiq.com/v1/search.php', {\n            params: {\n            key: 'pk.a4ee20e6824496da2fb04ab94b9da2dc',  // discussed below\n            q: name,\n            format: 'json',\n            },\n        })\n        .then((response) => {\n            const lat = response.data[0].lat\n            const lon = response.data[0].lon\n            console.log('success!', lat);\n            return {lat:lat,lon:lon}\n        })\n        .catch((error) => {\n            console.log('error!', error.response.data);\n        });\n        }\n    \n    \n        \n        const onFormSubmit = (event) =>{\n            event.preventDefault();\n            const coord = getCoordinates(formFields.name)\n            console.log(coord[0])\n            console.log(coord[1])\n\n            // props.addStudentCallback({\n                //     nameData: formFields.name,\n                //     emailData: formFields.email\n                // });\n                \n                // setFormFields({\n                    //     name: '',\n                    //     email: '',\n                    // });\n                    const newLocation = {\n                        name:formFields.name,\n                        lat: coord[0],\n                        lon: coord[1]\n                    }\n                    props.onUpdateLocation(newLocation)\n                    \n                }\n        \n        const onLocationChange = (event) => {\n            setFormFields({\n                ...formFields,\n                name: event.target.value\n                })\n            };\n    \n    \n    return (\n        <form onSubmit={onFormSubmit}>\n            <div>\n                <label htmlFor=\"city\">City: </label>\n                <input \n                name=\"city\" \n                value={formFields.name}\n                onChange={onLocationChange}/>\n            </div>\n            <input type='submit' value='Add Location'></input>\n        </form>\n\n    )\n}\n\nNewLocationForm.propTypes = {\n    onUpdateLocation:PropTypes.func.isRequired,\n}\nexport default NewLocationForm;"]},"metadata":{},"sourceType":"module"}